{"version":3,"sources":["serviceWorker.js","backend/lookup.js","posts/api_requests.js","posts/like_button.js","posts/blue_like_display.js","posts/post.js","posts/list_posts.js","posts/follow_button.js","posts/profile.js","posts/profile-settings-form.js","posts/search_nav_bar.js","posts/post_form.js","posts/side_bar.js","index.js","posts/components.js"],"names":["Boolean","window","location","hostname","match","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getApiJsonData","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","CSRFToken","open","setRequestHeader","onload","status","href","response","onerror","e","send","apiPostList","nextUrl","undefined","replace","apiMyProfile","apiGetNotificationNumber","LikeButton","props","post","didPerformLike","handleLikeBackendEvent","likes","console","log","handleClick","event","postId","preventDefault","id","is_liked","className","onClick","style","color","BlueLikeDisplay","paddingTop","paddingBottom","Post","useState","likePost","setLikePost","handlePerformLike","newLikePost","userProfileUrl","author","username","titleUrl","isoDate","Date","date_posted","src","image","toDateString","getHours","getMinutes","title","content","marginBottom","PostsList","postsInit","setPostInit","posts","setPosts","setNextUrl","postsDidSet","setPostsDidSet","useEffect","final","newPosts","concat","next","results","alert","Fragment","map","item","index","key","FollowUnfollowButton","currentState","profileId","didPerformFollow","handleFollowUnfollowBackendEvent","handleFollowClick","receiver_id","apiFollowRequest","cursor","Profile","profileItSelf","setProfileItSelf","handlePerformFollow","newFollowUnfollow","tempData","profile","user","follow_status","display","followers_count","opacity","following_count","first_name","last_name","ProfileSettingsForm","profileData","setProfileData","inputUsernameRef","React","createRef","inputBiographyRef","inputFirstNameRef","inputLastNameRef","inputEmailAddressRef","inputImageRef","modalRef","useRef","startTrueInput","setStartTrueInput","startFalseInput","setStartFalseInput","inputProfileStatus","setInputProfileStatus","setImage","formData","FormData","handleEditSubmit","handleProfileLookupAfterSubmit","append","csrftoken","current","value","fetch","headers","body","then","click","catch","error","startTruehandleChange","target","checked","startFalseHandleChange","encType","ref","type","defaultValue","maxLength","biography","email_address","onChange","files","isPrivate","FormControlLabel","control","Switch","label","data-toggle","SearchNavBar","textAlign","data-target","marginLeft","placeholder","aria-label","PostForm","didPost","inputTitleRef","inputContentRef","alertClassName","setAlertClassName","alertMessage","setAlertMessage","alertType","setAlertType","handleBackendUpdate","PostAlert","onSubmit","postData","formatedData","imageurl","fontSize","height","fontWeight","float","marginTop","role","SideBar","notificationCount","setNotificationCount","setInterval","notifications","isowner","textDecoration","Badge","badgeContent","toString","view","selected","renderReactComponent","createElement","homeElement","getElementById","profileElement","sideBarElement","setNewPosts","newPost","tempNewPosts","unshift","ReactDOM","render","dataset","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.83c4d96e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\nexport function getApiJsonData(method , endpoint , callback , data) {\r\n    let jsonData;\r\n    if (data) {\r\n        jsonData = JSON.stringify(data)\r\n    }\r\n    const xhr = new XMLHttpRequest()\r\n    const url = `http://127.0.0.1:8000/api${endpoint}`\r\n    xhr.responseType = \"json\"\r\n    const CSRFToken = getCookie('csrftoken')\r\n    xhr.open(method , url)\r\n    xhr.setRequestHeader('Content-Type' , \"application/json\")\r\n\r\n\r\n    if (CSRFToken) {\r\n        xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.setRequestHeader(\"X-CSRFToken\", CSRFToken)        \r\n    }\r\n\r\n    xhr.onload = function() {\r\n        if (xhr.status === 403) {\r\n            // const detail = xhr.response.detail\r\n            window.location.href = 'login/?showLoginRequired=true'\r\n        }\r\n        callback(xhr.response , xhr.status)\r\n    }\r\n\r\n    xhr.onerror = function(e) {\r\n        callback({\"message\" : \"An error Occurred\"} , 400)\r\n    }\r\n    xhr.send(jsonData)\r\n}","import { getApiJsonData } from '../backend'\r\n\r\nexport function apiPostList(callback , nextUrl) {\r\n    let endpoint = '/posts/'\r\n    if (nextUrl !== null && nextUrl !== undefined) {\r\n        endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\" , \"\")\r\n    }\r\n    getApiJsonData(\"GET\" , endpoint , callback)\r\n}\r\n\r\nexport function apiPostCreate(postData , callback) {\r\n    const data = {title : postData.title , content : postData.content}\r\n    getApiJsonData('POST' , '/posts/create/' , callback , data)\r\n}\r\n\r\nexport function apiSingleProfile(callback , username) {\r\n    let endpoint = `/profile/${username}`\r\n    getApiJsonData(\"GET\" , endpoint , callback)\r\n}\r\n\r\nexport function apiMyProfile(method , callback , data) {\r\n    if (method === \"GET\") {\r\n        getApiJsonData(\"GET\" , \"/myprofile/settings/\" , callback)\r\n    } else if (method === \"POST\") {\r\n        getApiJsonData(\"POST\" , \"/myprofile/settings/\" , callback , data)\r\n    }\r\n}\r\n\r\nexport function apiFollowRequest(profileId , callback) {\r\n    let endpoint = '/profile-follow/'\r\n    const data = {receiver_id : profileId}\r\n    getApiJsonData(\"POST\" , endpoint , callback , data)\r\n}\r\n\r\nexport function apiLikePost(postId , callback) {\r\n    const data = {id : postId}\r\n    getApiJsonData('POST' , '/posts/like/' , callback , data)\r\n}\r\n\r\nexport function apiGetNotificationNumber(callback) {\r\n    getApiJsonData('GET' , '/notification-count/' , callback)\r\n}","import React from 'react'\r\nimport { apiLikePost } from './api_requests'\r\n\r\nexport function LikeButton(props) {\r\n    const { post , didPerformLike } = props\r\n    const likes = post.likes ? post.likes : 0\r\n\r\n\r\n    const handleLikeBackendEvent = (response , status) => {\r\n        console.log(response , status)\r\n        if ((status === 200 || status === 201) && didPerformLike) {\r\n            didPerformLike(response , status)\r\n        }\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiLikePost(post.id , handleLikeBackendEvent)\r\n    }\r\n    if (post.is_liked === true) {\r\n        return  <a className=\"like\" onClick={handleClick}><i  style={{color : \"#007bff\"}} className=\"fa fa-thumbs-o-up black\"></i></a>\r\n    } else {\r\n        return  <a className=\"like\" onClick={handleClick}><i className=\"fa fa-thumbs-o-up black\"></i></a>\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nexport function BlueLikeDisplay(props) {\r\n    const { post , didPerformLike } = props\r\n    const likes = post.likes ? post.likes : 0\r\n    return <span style={{paddingTop : \"5px\" , paddingBottom : \"3px\"}} className=\"blue-background\">{likes} people liked this post</span>\r\n}","import React, { useState } from 'react'\r\nimport { LikeButton } from './like_button'\r\nimport { BlueLikeDisplay } from './blue_like_display'\r\n\r\nexport function Post(props) { \r\n    const { post } = props\r\n    const [likePost , setLikePost] = useState(props.post ? props.post : null)\r\n\r\n    const handlePerformLike = (newLikePost , status) => {\r\n        if (status === 200) {\r\n            setLikePost(newLikePost)\r\n        }\r\n    }\r\n    const userProfileUrl =  `/profile/${post.author.username}`\r\n    const titleUrl = `/post/${post.id}`\r\n    var isoDate = new Date(post.date_posted)\r\n    return  <li>\r\n                <div className=\"media content-section mt-3\" >\r\n                    <a href={userProfileUrl}><img className=\"rounded-circle article-img\" src={`http://127.0.0.1:8000${post.image}`}></img></a>\r\n                    <div className='media-body'>\r\n                        <div className='article-metadata'>\r\n                            <a className=\"mr-2\" href={userProfileUrl}> { post.author.username } </a>\r\n                            <small className=\"text-muted\">{ isoDate.toDateString()} { isoDate.getHours()}:{isoDate.getMinutes()} </small>\r\n                        </div>\r\n                        <h2>    \r\n                            <a className=\"article-title\" href={titleUrl}> {post.title } </a>\r\n                        </h2>\r\n                            <p className=\"article-content\"> {post.content } </p> \r\n                        <hr></hr>                            \r\n                          <LikeButton post={likePost} didPerformLike={handlePerformLike}/>\r\n                          <a className=\"like\"><i style={{ marginBottom:\"10px\", }} className=\"fa fa-twitter black\"></i></a>\r\n                          <BlueLikeDisplay post={likePost} didPerformLike={handlePerformLike}/>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </li>\r\n    }","import React , { useEffect , useState } from 'react'\r\nimport { apiPostList } from './api_requests'\r\nimport { Post } from './post'\r\n\r\nexport function PostsList(props) {\r\n    const [postsInit, setPostInit] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [postsDidSet, setPostsDidSet] = useState(false)\r\n    useEffect(()=> {\r\n      const final = [...props.newPosts].concat(postsInit)\r\n      if (final.length !== posts.length) {\r\n        setPosts(final)\r\n      }\r\n    }, [props.newPosts, posts , postsInit])\r\n\r\n    useEffect(() => {\r\n      if (postsDidSet === false) {\r\n        const handlePostListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            setPostInit(response.results)\r\n            setPostsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiPostList(handlePostListLookup)\r\n      }\r\n    }, [postsInit, postsDidSet, setPostsDidSet , props.username])\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault();\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            console.log(\"Next\" , response.next)\r\n            const newPosts = [...posts].concat(response.results)\r\n            setPostInit(newPosts)\r\n            setPosts(newPosts)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiPostList(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n    console.log(posts)\r\n\r\n    return <React.Fragment>{posts.map((item, index)=> {\r\n       \r\n        return <Post post={item} key={index}/>\r\n\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React from 'react'\r\nimport { apiFollowRequest } from './api_requests'\r\n\r\nexport function FollowUnfollowButton(props) {\r\n    const { currentState , profileId ,didPerformFollow } = props\r\n\r\n    const handleFollowUnfollowBackendEvent = (response , status) => {\r\n        if ((status === 201 || status === 200) && didPerformFollow) {\r\n            didPerformFollow(response , status)\r\n        }\r\n    }\r\n\r\n    const handleFollowClick = (event) => {\r\n        event.preventDefault()\r\n        apiFollowRequest(profileId , handleFollowUnfollowBackendEvent)\r\n        \r\n    }\r\n\r\n    if (currentState === \"sent\") {\r\n        return <span style={{cursor : \"pointer\"}} onClick={handleFollowClick} className=\"following-button ml-3\">Follow request sent</span>\r\n    } else if (currentState === \"not_sent\") {\r\n        return <span style={{cursor : \"pointer\"}} onClick={handleFollowClick} className=\"follow-button ml-3\">Follow</span>\r\n    } else if (currentState === \"following\") {\r\n        return <span style={{cursor : \"pointer\"}} onClick={handleFollowClick} className=\"following-button ml-3\">Following</span>\r\n    } else if (currentState === \"is_owner\") {\r\n        return <a href=\"/my-profile/settings/\" style={{cursor : \"pointer\"}} className=\"following-button ml-3\">Settings</a>\r\n    }\r\n}","import React , { useEffect , useState } from 'react'\r\nimport { apiSingleProfile } from './api_requests'\r\nimport { FollowUnfollowButton } from './follow_button'\r\n\r\nexport function Profile(props) {\r\n    const [profileItSelf , setProfileItSelf] = useState([])\r\n    const handlePerformFollow = (newFollowUnfollow , status) => {\r\n      if (status === 200 || status === 201) {\r\n        const sideStepMapError = [newFollowUnfollow]\r\n        setProfileItSelf(sideStepMapError)\r\n        console.log(\"setProfileItSelf\")\r\n        \r\n      }\r\n    }\r\n    useEffect(() => {\r\n        const handleSingleProfileLookup = (response , status) => {\r\n            if (status === 200) {\r\n                const tempData = [...props.profile].concat(response)\r\n                setProfileItSelf(tempData)\r\n                \r\n            }\r\n        }\r\n        \r\n        apiSingleProfile(handleSingleProfileLookup , `${props.username}/`)\r\n        \r\n    } , [props.profile])\r\n    \r\n    return <React.Fragment>{profileItSelf.map((item, index)=> {\r\n        return  <div key={index} className=\"content-section\">\r\n                  <div className=\"media\">\r\n                  <img className=\"rounded-circle account-img\" src={item.image}></img>\r\n                    <div className=\"media-body\">\r\n                    <h2  className=\"account-heading\">{ item.user.username } <FollowUnfollowButton currentState={item.follow_status} didPerformFollow={handlePerformFollow} profileId={item.user.id}/> </h2>\r\n                        <span>\r\n                          <a style={{display:\"inline\"}} className=\"article-title\" href=\"#\" ><strong>{item.user.followers_count}</strong> followers</a>\r\n                          <span style={{opacity:\"0%\"}}>...</span>\r\n                          <a style={{display:\"inline\"}} className=\"article-title\" href=\"#\" ><strong>{item.user.following_count}</strong> following</a>\r\n                          <p className=\"text-secondary\">{item.user.first_name} {item.user.last_name}</p>\r\n                        </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n      })}\r\n      </React.Fragment>\r\n    \r\n}","import React , {useState , useEffect} from 'react'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { apiMyProfile } from './api_requests'\r\nimport { getCookie } from '../backend/lookup'\r\n\r\nexport function ProfileSettingsForm(props) {\r\n    const [profileData , setProfileData] = useState([])   \r\n    const inputUsernameRef = React.createRef()\r\n    const inputBiographyRef = React.createRef()\r\n    const inputFirstNameRef = React.createRef()\r\n    const inputLastNameRef = React.createRef()\r\n    const inputEmailAddressRef = React.createRef()\r\n    const inputImageRef = React.createRef()\r\n    const modalRef = React.useRef(null)\r\n    const [startTrueInput , setStartTrueInput] = useState(true)\r\n    const [startFalseInput , setStartFalseInput] = useState(false)\r\n    const [inputProfileStatus , setInputProfileStatus] = useState(null)\r\n    const [image , setImage] = useState()\r\n    const formData = new FormData\r\n\r\n\r\n\r\n    const handleEditSubmit = (event) => {\r\n        event.preventDefault()\r\n        const handleProfileLookupAfterSubmit = (response , status) => {\r\n            if (status === 200) {\r\n                const tempData = [...props.profile].concat(response)\r\n                setProfileData(tempData) \r\n            }\r\n        }\r\n        if (image !== null && image !== undefined) {\r\n            formData.append('image' , image)\r\n        }\r\n        const csrftoken = getCookie('csrftoken')  \r\n        formData.append('username' , inputUsernameRef.current.value)\r\n        formData.append('biography' , inputBiographyRef.current.value)\r\n        formData.append('first_name' , inputFirstNameRef.current.value)\r\n        formData.append('last_name' , inputLastNameRef.current.value)\r\n        formData.append('email_address' , inputEmailAddressRef.current.value)\r\n        formData.append('isprivate' , inputProfileStatus)\r\n        console.log(image)\r\n        fetch(\"http://127.0.0.1:8000/api/myprofile/settings/\" , {\r\n            method : \"POST\",\r\n            headers : {\r\n        \r\n                'X-CSRFToken': csrftoken\r\n            },\r\n            body : formData\r\n        })\r\n        .then(() => {\r\n            apiMyProfile(\"GET\" , handleProfileLookupAfterSubmit)\r\n            modalRef.current.click()\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const handleProfileLookup = (response , status) => {\r\n            if (status === 200 || 201) {\r\n                const tempData = [...props.profile].concat(response)\r\n                setProfileData(tempData)\r\n                \r\n            }\r\n        }\r\n        apiMyProfile(\"GET\" , handleProfileLookup)\r\n    } , [])  \r\n\r\n    const startTruehandleChange = (event) => {\r\n        setStartTrueInput(event.target.checked)\r\n        setStartFalseInput(event.target.checked)\r\n        setInputProfileStatus(event.target.checked)\r\n        console.log(event.target.checked)\r\n    }\r\n\r\n    const startFalseHandleChange = (event) => {\r\n        setStartFalseInput(event.target.checked)\r\n        setStartTrueInput(event.target.checked)\r\n        setInputProfileStatus(event.target.checked)\r\n        console.log(event.target.checked)\r\n    }\r\n\r\n    console.log(profileData)\r\n    return <React.Fragment>{profileData.map((item , index) => {\r\n        return <div key={index} className=\"content-section\">\r\n                <div className=\"media\">\r\n                    <img className=\"rounded-circle account-img\" src={item.image}></img>\r\n                    \r\n                    <div className=\"media-body\">\r\n                    <h2 className=\"account-heading article-title\">{item.user.username}</h2>\r\n                    <span>\r\n                        <a href=\"#\" style={{display : \"inline\"}} className=\"article-title\"><strong>{item.user.followers_count}</strong> Followers</a>\r\n                        <span style={{opacity : \"0\"}}>...</span>\r\n                        <a href=\"#\" style={{display : \"inline\"}} className=\"article-title\"><strong>{item.user.following_count}</strong> Following</a>\r\n                        <p className=\"text-secondary\">{item.user.first_name} {item.user.last_name}</p>\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n                <form method=\"POST\" encType=\"multipart/form-data\">\r\n                    <fieldset className=\"form-group\">\r\n                    <legend className=\"border-bottom mb-4\">Profile Info</legend>\r\n                    <div className=\"form-group\">\r\n                            <label className=\"requiredField\">Username</label>\r\n                            <span className=\"asteriskField\">*</span>\r\n                            <input ref={inputUsernameRef} type=\"text\" defaultValue={item.user.username} maxLength=\"20\" className=\"textinput textInput form-control\"></input>\r\n                            <small className=\"form-text text-muted\">Required. 20 characters or fewer. Letters, digits and @/./+/-/_ only.</small>\r\n                            <small className=\"form-text text-muted\">You can change your username only twice every 14 days.</small>         \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"requiredField\">Biography</label>\r\n                            <textarea ref={inputBiographyRef} type=\"text\" defaultValue={item.biography} maxLength=\"150\" className=\"textinput textInput form-control\"></textarea>\r\n                            <small className=\"form-text text-muted\">Not Required. 150 characters or fewer.</small>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"requiredField\">First Name</label>\r\n                            <input ref={inputFirstNameRef} type=\"text\" defaultValue={item.user.first_name} maxLength=\"20\" className=\"textinput textInput form-control\"></input>\r\n                            <small className=\"form-text text-muted\">Not required. 20 characters or fewer. Letters only.</small>                              \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"requiredField\">Last Name</label>\r\n                            <input ref={inputLastNameRef} type=\"text\" defaultValue={item.user.last_name} maxLength=\"20\" className=\"textinput textInput form-control\"></input>\r\n                            <small className=\"form-text text-muted\">Not required. 20 characters or fewer. Letters only.</small>                              \r\n                        </div> \r\n                        <div className=\"form-group\">\r\n                            <label className=\"requiredField\">Email<span className=\"asteriskField\">*</span></label>\r\n                            <input ref={inputEmailAddressRef} type=\"email\" defaultValue={item.user.email_address} className=\"emailinput form-control\"></input>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input ref={inputImageRef} onChange={(event) => setImage(event.target.files[0])} type=\"file\"></input>\r\n                        </div>\r\n                        \r\n                            { item.isPrivate ? <FormControlLabel\r\n                               control={<Switch id=\"switch\" checked={startTrueInput} onChange={startTruehandleChange} name=\"checkedPrivate\" />}\r\n                               label=\"Private\"/> : <FormControlLabel\r\n                               control={<Switch id=\"switch\" checked={startFalseInput} onChange={startFalseHandleChange} name=\"checkedPrivate\" />}\r\n                               label=\"Private\"/>}\r\n                        \r\n\r\n                    </fieldset>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-outline-success\" onClick={handleEditSubmit}>Update</button>\r\n                        <a ref={modalRef} href=\"#myModal\"  data-toggle=\"modal\" className=\"d-none\"></a>\r\n                    </div>\r\n                </form>\r\n           </div>\r\n    \r\n    })}\r\n    </React.Fragment>\r\n}\r\n","import React from 'react'\r\n\r\nexport function SearchNavBar(props) {\r\n    return  <form id=\"search_bar_form\" style={{textAlign : \"right\"}} className=\"blue-background-search\">\r\n                <a type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModal\" className=\"fa fa-plus-circle plus-hover\"></a>\r\n                <a type=\"button\" style={{marginLeft : \"15px\"}} className=\"fa fa-search search_icon\"></a>\r\n                <input id=\"search_bar_input\" className=\"search-bar\" type=\"search\" placeholder=\" Search...\" aria-label=\"Search\"></input>\r\n            </form> \r\n}","import React , {useEffect , useState} from 'react'\r\nimport { apiPostCreate } from './api_requests'\r\n\r\nexport function PostForm(props) {\r\n    const {didPost} = props\r\n    const isoDate = new Date()\r\n    const inputTitleRef = React.createRef()\r\n    const inputContentRef = React.createRef()\r\n    const [alertClassName , setAlertClassName] = useState(null)\r\n    const [alertMessage , setAlertMessage] = useState(null)\r\n    const [alertType , setAlertType] = useState(null)\r\n    \r\n    const handleBackendUpdate = (response , status) => {\r\n        if (status === 201) {\r\n            didPost(response)\r\n            setAlertType(\"success\")\r\n            setAlertMessage(\"Post created successfully!\")\r\n            setAlertClassName(\"alert alert-success\")\r\n        \r\n        } else if (status === 400) {\r\n            setAlertType(\"error\")\r\n            setAlertMessage(\"The form is wrong. Please make sure there is no camps empty.\")\r\n            setAlertClassName(\"alert alert-danger\")            \r\n        }\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const formatedData = {title : inputTitleRef.current.value , content : inputContentRef.current.value}\r\n        apiPostCreate(formatedData , handleBackendUpdate)\r\n        if (inputTitleRef.current.value !== \"\" && inputContentRef.current.value !== \"\") {\r\n            inputTitleRef.current.value = null\r\n            inputContentRef.current.value = null\r\n        }\r\n    }\r\n\r\n    return <> { alertType && <PostAlert alertType={alertType} alertMessage={alertMessage} alertClassName={alertClassName}/>}\r\n                    \r\n            <form onSubmit={handleSubmit} className=\"media content-section mt-3\">\r\n                <a href=\"#\"><img className=\"rounded-circle article-img\" src={`http://127.0.0.1:8000${props.imageurl}`}></img></a>\r\n                <div className=\"media-body\">\r\n                    <div className=\"article-metadata\">\r\n                            <a className=\"mr-2\" href={`http://127.0.0.1:8000/profile/${props.username}`}>{props.username}</a>\r\n                            <small className=\"text-muted\">{ isoDate.toDateString()} { isoDate.getHours()}:{isoDate.getMinutes()}</small>\r\n                    </div>\r\n                    <h2>\r\n                        <input ref={inputTitleRef} style={{fontSize : \"30px\" , height : \"39px\" , color : \"#444444\" , fontWeight : 600}} className=\"form-control\" type=\"text\"></input>\r\n                    </h2>\r\n                        <textarea ref={inputContentRef} style={{height : \"89px\"}} className=\"form-control\"></textarea>                     \r\n                    <hr></hr>\r\n                    <a className=\"like\"><i style={{marginBottom : \"15px\"}} className=\"fa fa-thumbs-o-up black\"></i></a>\r\n                    <a className=\"like\"><i className=\"fa fa-twitter black\"></i></a>\r\n                    <span style={{paddingTop : \"5px\" , paddingBottom : \"3px\"}} className=\"blue-background\">X people liked this post</span>\r\n                    <button type=\"submit\" style={{paddingTop : \"3px\" , paddingBottom : \"3px\" , float : \"right\" , cursor : \"pointer\" , marginTop : \"5px\" , color : \"white\"}} className=\"btn btn-primary\">Post</button>                     \r\n                </div>\r\n            </form>\r\n            </>\r\n}\r\n\r\nfunction PostAlert(props) {\r\n    const {alertType , alertMessage , alertClassName} = props\r\n    \r\n    return <div  className={alertClassName} style={{marginTop : \"15px\"}} role=\"alert\">{alertMessage}</div>\r\n}\r\n\r\n","import React , { useState , useEffect } from 'react'\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { apiGetNotificationNumber } from './api_requests'\r\n\r\n\r\nexport function SideBar(props) {\r\n    const [notificationCount , setNotificationCount] = useState([])\r\n\r\n    setInterval(function(){ \r\n        const handleNotificationNumberLookup = (response , status) => {\r\n            if (status === 200) {\r\n                console.log(response.notifications)\r\n                setNotificationCount(response.notifications)\r\n            }\r\n        }\r\n\r\n        apiGetNotificationNumber(handleNotificationNumberLookup)\r\n    }, 10000);\r\n\r\n    useEffect(() => {\r\n        const handleNotificationNumberLookup = (response , status) => {\r\n            if (status === 200) {\r\n                console.log(response.notifications)\r\n                setNotificationCount(response.notifications)\r\n            }\r\n        }\r\n\r\n        apiGetNotificationNumber(handleNotificationNumberLookup)\r\n\r\n    } , [])\r\n    \r\n\r\n    if (props.isowner === true || props.isowner === \"True\") {\r\n        return  <div className=\"content-section\">\r\n                    <h3>My Sidebar</h3>\r\n                    <p className='text-muted'>You can put any information here you'd like.</p>\r\n                    <ul className=\"list-group\">\r\n                    <a href={`/profile/${props.username}`} style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">View Profile</a>\r\n                    <a href=\"/my-profile/settings/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Edit Profile</a>\r\n                    <a href=\"/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Change Password</a>\r\n                    </ul>\r\n                    <br></br>\r\n                </div>\r\n    } else if (props.isowner === false || props.isowner === \"False\") {\r\n        return  <div className=\"content-section\">\r\n            <h3>My Sidebar</h3>\r\n            <p className='text-muted'>You can put any information here you'd like.</p>\r\n            <ul className=\"list-group\">\r\n            <a href=\"/my-profile/settings/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Profile setttings</a>\r\n            <a href=\"/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Latest Posts</a>\r\n            <a href=\"/notifications\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Notifications                           \r\n            <span className={\"ml-2\"}>\r\n            <Badge badgeContent={notificationCount.toString()} color=\"secondary\">\r\n            <MailIcon style={{color : \"black\"}}/>\r\n            </Badge>\r\n            </span></a>\r\n            <a href=\"/messages\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Messages</a>\r\n            </ul>\r\n            <br></br>\r\n        </div>\r\n    }\r\n    \r\n    if (props.view === 'profile-settings') {\r\n        return  <div className=\"content-section\">\r\n                            <h3>My Sidebar</h3>\r\n                            <p className='text-muted'>You can put any information here you'd like.</p>\r\n                            <ul className=\"list-group\">\r\n                            { props.selected == 'viewmyprofile' ? <a href={`/profile/${props.username}`} style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">View Profile</a> : <a href={`/profile/${props.username}`} style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">View Profile</a>}\r\n                            { props.selected == 'editprofile' ? <a href=\"/my-profile/settings/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">Edit Profile</a> : <a href=\"/my-profile/settings/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Edit Profile</a>}   \r\n                            { props.selected == 'changePassword' ? <a href=\"/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">Change Password</a> : <a href=\"/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Change Password</a>}\r\n                            </ul>\r\n                            <br></br>\r\n                        </div> \r\n                            \r\n    } else if (props.view === 'home') {\r\n\r\n\r\n            return  <div className=\"content-section\">\r\n                            <h3>My Sidebar</h3>\r\n                            <p className='text-muted'>You can put any information here you'd like.</p>\r\n                            <ul className=\"list-group\">\r\n                            { props.selected == 'profile' ? <a href=\"/my-profile/settings/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">Profile setttings</a> : <a href=\"/my-profile/settings/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Profile setttings</a>}   \r\n                            { props.selected == 'latestPosts' ? <a href=\"/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">Latest Posts</a> : <a href=\"/\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Latest Posts</a>}\r\n                            { props.selected == 'notifications' ? <a href=\"/notifications\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">Notifications</a> : <a href=\"/notifications\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Notifications                           \r\n                            <span className={\"ml-2\"}>\r\n                            <Badge badgeContent={notificationCount.toString()} color=\"secondary\">\r\n                                <MailIcon style={{color : \"black\"}}/>\r\n                            </Badge>\r\n                            </span></a>}                   \r\n                            { props.selected == 'messages' ? <a href=\"/messages\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-selected\">Messages</a> : <a href=\"/messages\" style={{textDecoration : \"None\"}} className=\"list-group-item sidebar-item\">Messages</a>}\r\n\r\n                            </ul>\r\n                            <br></br>\r\n                        </div>\r\n    }\r\n           \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { PostsComponent, ProfileComponent , SearchNavBarComponent , ProfileSettingsComponent , SideBarComponent} from './posts/components'\n\nconst renderReactComponent = React.createElement\nconst homeElement = document.getElementById(\"posts-react\")\nconst profileElement = document.getElementById(\"profile-react\")\nconst sideBarElement = document.getElementById('sidebar-react')\nconst searchNavBarElement = document.getElementById(\"search-nav-bar-react\")\nconst profileSettingsElement = document.getElementById(\"profile-settings-react\")\n\nconst componentsList = [\n  [homeElement , PostsComponent] , \n  [profileElement , ProfileComponent] , \n  \n  [searchNavBarElement , SearchNavBarComponent] , \n  [sideBarElement , SideBarComponent] ,\n  [profileSettingsElement , ProfileSettingsComponent]\n]\n\ncomponentsList.map(item => {\n  console.log(item[0])\n  if (item[0]) {\n    ReactDOM.render(renderReactComponent(item[1] , item[0].dataset) , item[0])\n  }\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState }  from 'react'\r\nimport { PostsList } from './list_posts'\r\nimport { Profile } from './profile'\r\nimport { ProfileSettingsForm } from './profile-settings-form'\r\nimport { SearchNavBar } from './search_nav_bar'\r\nimport { PostForm } from './post_form'\r\nimport { SideBar } from './side_bar'\r\n\r\nexport function PostsComponent(props) {\r\n    const [newPosts , setNewPosts] = useState([])\r\n    const handleNewPost = (newPost) => {\r\n        let tempNewPosts = [...newPosts]\r\n        tempNewPosts.unshift(newPost)\r\n        setNewPosts(tempNewPosts)\r\n        }\r\n        \r\n    return <>    \r\n            { props.username &&<PostForm didPost={handleNewPost} {...props}/>}\r\n            <div className={props.className}>\r\n                <PostsList newPosts={newPosts} {...props} />\r\n            </div>\r\n        </>\r\n}\r\n\r\nexport function ProfileComponent(props) {\r\n    const [profile , setProfile] = useState([])\r\n    return <Profile profile={profile} {...props}/>\r\n}\r\n\r\nexport function ProfileSettingsComponent(props) {\r\n    const [profile , setProfile] = useState([])\r\n    return <ProfileSettingsForm profile={profile} {...props}/>\r\n}\r\n\r\nexport function SearchNavBarComponent(props) {\r\n    return <SearchNavBar/>\r\n}\r\n\r\nexport function SideBarComponent(props) {\r\n    return <SideBar {...props}/>\r\n}"],"sourceRoot":""}